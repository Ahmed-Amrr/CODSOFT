/*
_____________________________________________________________________________________________________________________
file  : tic tac toe.cpp
brief : Tic-Tac-Toe Game
author: Ahmed Amr Ali
date  : 25 September 2023
_____________________________________________________________________________________________________________________
*/

#include <iostream>

using namespace std;

char grid[9] = {'1', '2', '3', '4', '5', '6', '7', '8', '9'};

// this function is for displaying the board with the inputs
void board()
{
    cout << "\n\t\tTIC TAC TOE" << endl;
    cout << "\n\tPlayer-1 [x]\t Player-2 [o]" << endl
         << endl;
    cout << "\t\t|\t\t|" << endl;
    cout << "\t" << grid[0] << "\t|\t" << grid[1] << "\t|\t" << grid[2] << endl;
    cout << " _______________|_______________|_______________" << endl;
    cout << "\t\t|\t\t|" << endl;
    cout << "\t" << grid[3] << "\t|\t" << grid[4] << "\t|\t" << grid[5] << endl;
    cout << " _______________|_______________|_______________" << endl;
    cout << "\t\t|\t\t|" << endl;
    cout << "\t" << grid[6] << "\t|\t" << grid[7] << "\t|\t" << grid[8] << endl;
}

// checks for the status of the game
int check()
{
    // in case of winning
    if ((grid[0] == grid[1] && grid[1] == grid[2]) || (grid[3] == grid[4] && grid[4] == grid[5]) || (grid[6] == grid[7] && grid[7] == grid[8]) ||
        (grid[0] == grid[3] && grid[3] == grid[6]) || (grid[1] == grid[4] && grid[4] == grid[7]) || (grid[2] == grid[5] && grid[5] == grid[8]) ||
        (grid[0] == grid[4] && grid[4] == grid[8]) || (grid[2] == grid[4] && grid[4] == grid[6]))
    {
        return 1;
    }
    // in case of a draw
    else if (grid[0] != '1' && grid[1] != '2' && grid[2] != '3' &&
             grid[3] != '4' && grid[4] != '5' && grid[5] != '6' &&
             grid[6] != '7' && grid[7] != '8' && grid[8] != '9')
    {
        return -1;
    }
    // the game is still pending
    else
    {
        return 0;
    }
}

int main()
{
    char mark, again = 'y';
    int select;
    // a while loop for repeating the game if wanted
    while (tolower(again) == 'y')
    {
        // resets all the values
        grid[0] = '1';
        grid[1] = '2';
        grid[2] = '3';
        grid[3] = '4';
        grid[4] = '5';
        grid[5] = '6';
        grid[6] = '7';
        grid[7] = '8';
        grid[8] = '9';
        bool againbool = false;
        int player = 1;
        system("cls");
        // gets the inputs from the players until a draw or one of them wins
        while (check() == 0)
        {
            board();
            if (player % 2 != 0)
            {
                player = 1;
                mark = 'X';
            }
            else
            {
                player = 2;
                mark = 'O';
            }
            cout << "\n\tPlayer " << player << "'s turn, choose a number: ";
            cin >> select;
            cin.ignore();
            // checks if the selected input is valid or not
            if (select == 1 && grid[0] == '1')
                grid[0] = mark;
            else if (select == 2 && grid[1] == '2')
                grid[1] = mark;
            else if (select == 3 && grid[2] == '3')
                grid[2] = mark;
            else if (select == 4 && grid[3] == '4')
                grid[3] = mark;
            else if (select == 5 && grid[4] == '5')
                grid[4] = mark;
            else if (select == 6 && grid[5] == '6')
                grid[5] = mark;
            else if (select == 7 && grid[6] == '7')
                grid[6] = mark;
            else if (select == 8 && grid[7] == '8')
                grid[7] = mark;
            else if (select == 9 && grid[8] == '9')
                grid[8] = mark;
            else
            {
                cout << "\n\tInvalid input, try again" << endl;
                cout << string(50, '_') << endl;
                continue;
            }
            player++;
            system("cls");
        }
        // after getting the required number of inputs we check if it is a win or a draw
        board();
        if (check() == 1)
            cout << "\n\t\tPlayer " << player - 1 << " wins!!" << endl;
        else
            cout << "\n\t\t\tDraw!!" << endl;

        cout << "\ndo you want to play again ? (y/n)" << endl;
        cin >> again;
        // a while loop to make sure the user entered the required answer
        while (!againbool)
        {
            if (tolower(again) == 'y' || tolower(again) == 'n')
            {
                againbool = true;
            }
            else
            {
                cout << "\nYou entered wrong answer, try again:" << endl;
                cin >> again;
                againbool = false;
            }
        }
    }
    return 0;
}
